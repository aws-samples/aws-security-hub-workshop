{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Creates some secrets with rotation schedules and a rotation function.",
    "Resources": {
    	"SecretOne": {
    		"Type": "AWS::SecretsManager::Secret",
    		"Properties": {
	    		"Description": "SecretOne",
	    		"GenerateSecretString": {
	    			"SecretStringTemplate": "{\"username\":\"dbadmin\"}",
	    			"GenerateStringKey": "password",
	    			"PasswordLength": 30,
	    			"ExcludeCharacters": "\"@\//"
	    		},
	    		"Name": "ImportantSecret"
			}
    	},
    	"SecretOneRotation": {
    		"DependsOn": "SecretRotationFunction",
    		"Type": "AWS::SecretsManager::RotationSchedule",
    		"Properties": {
    			"RotationLambdaARN": {"Fn::GetAtt": ["SecretRotationFunction","Outputs.RotationLambdaARN"]},
    			"RotationRules": {
    				"AutomaticallyAfterDays": 120
    			},
    			"SecretId": {"Ref": "SecretOne"}
    		}
    	},
    	"SecretTwo": {
    		"Type": "AWS::SecretsManager::Secret",
    		"Properties": {
	    		"Description": "SecretOne",
	    		"GenerateSecretString": {
	    			"SecretStringTemplate": "{\"username\":\"dbadmin\"}",
	    			"GenerateStringKey": "password",
	    			"PasswordLength": 30,
	    			"ExcludeCharacters": "\"@\//"
	    		},
	    		"Name": "UltimateSecret"
			}
    	},
    	"SecretTwoRotation": {
    		"DependsOn": "SecretRotationFunction",
    		"Type": "AWS::SecretsManager::RotationSchedule",
    		"Properties": {
    			"RotationLambdaARN": {"Fn::GetAtt": ["SecretRotationFunction","Outputs.RotationLambdaARN"]},
    			"RotationRules": {
    				"AutomaticallyAfterDays": 120
    			},
    			"SecretId": {"Ref": "SecretTwo"}
    		}
    	},
    	"SecretRotationFunction": {
          "Type": "AWS::Serverless::Application",
          "Properties":{
            "Location": {
              "ApplicationId": "arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSMySQLRotationSingleUser",
              "SemanticVersion": "1.1.192"
            },
            "Parameters": {
              "endpoint": {"Fn::Sub": "https://secretsmanager.${AWS::Region}.amazonaws.com"},
              "functionName": "SecretsManagerMySQLRotationLambda"
            }
          }
        },
        "SecretRotationComplianceLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "LambdaPolicyName",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "logs:CreateLogGroup",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:logs:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":*"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:logs:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":log-group:/aws/lambda/find-secrets-without-rotation:*"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "securityhub:UpdateFindings",
                                        "securityhub:BatchImportFindings",
                                        "securityhub:GetFindings",
                                        "secretsmanager:ListSecrets",
                                        "secretsmanager:DescribeSecret"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SecretComplianceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                "sa-security-specialist-workshops-",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "security-hub-workshop/lambda/find-secrets-without-rotation.zip"
                },
                "Description": "Function to raise SecHub findings for non-compliant secrets",
                "FunctionName": "find-secrets-without-rotation",
                "Runtime": "python3.10",
                "Handler": "find-secrets-without-rotation.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "SecretRotationComplianceLambdaRole",
                        "Arn"
                    ]
                },
                 "Environment": {
                    "Variables": {
                        "ROTATION_DAYS_MAX": "90"
                    }
                }
            }
        },
        "SecretComplianceRunRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Secret Compliance Assessment CRON",
                "ScheduleExpression": "rate(15 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "SecretComplianceLambdaFunction",
                                "Arn"
                            ]
                        },
                        "Id": "SecretComplianceLambdaFunctionId"
                    }
                ]
            }
        },
        "SecretComplianceLambdaInvokePermission": {
        	"Type": "AWS::Lambda::Permission",
        	"Properties": {
        		"FunctionName": {
        			"Fn::GetAtt": [
                                "SecretComplianceLambdaFunction",
                                "Arn"
                            ]
                   	},
             	"Action": "lambda:InvokeFunction",
             	"Principal": "events.amazonaws.com",
             	"SourceArn": {
             		"Fn::GetAtt": [
             		   "SecretComplianceRunRule",
                		"Arn"
            		]
             	}
        	}
        }
    }
}
